{"ast":null,"code":"var _jsxFileName = \"/Users/kanoflordelis/ForcedToConform/client/src/components/ShowGallery.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos, fetchVideos, fetchLyrics, selectMedia } from '../actions';\n\nclass ShowGallery extends React.Component {\n  componentDidMount() {\n    this.props.fetchPhotos();\n    this.props.fetchVideos();\n    this.props.fetchLyrics();\n  }\n\n  render() {\n    const selectedMedia = this.props.selectedMedia; // if (selectedMedia === null) {\n    // \treturn;\n    // } else if (selectedMedia === 'Photo') {\n    // \treturn this.props.photos.map(photo => {\n    // \t\treturn (\n    // \t\t\t<div key={photo.id} className=\"ui card\">\n    // \t\t\t\t<div className=\"image\">\n    // \t\t\t\t\t<img src={photo.acf.photo.url} alt={photo.acf.description} />\n    // \t\t\t\t</div>\n    // \t\t\t\t<div className=\"content\">\n    // \t\t\t\t\t<div className=\"header\">{photo.acf.description}</div>\n    // \t\t\t\t</div>\n    // \t\t\t</div>\n    // \t\t);\n    // \t});\n    // } else if (selectedMedia === 'Video') {\n    // \treturn this.props.vidoes.map(video => {\n    // \t\treturn (\n    // \t\t\t<div key={video.id} className=\"ui card\">\n    // \t\t\t\t<div className=\"image\">\n    // \t\t\t\t\t<video />\n    // \t\t\t\t</div>\n    // \t\t\t\t<div className=\"content\">\n    // \t\t\t\t\t<div className=\"header\">fasdf</div>\n    // \t\t\t\t</div>\n    // \t\t\t</div>\n    // \t\t);\n    // \t});\n    // }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"nothing\");\n  }\n\n}\n\nconst mapToStateProps = state => {\n  console.log(state.videos);\n  return {\n    photos: Object.values(state.photos),\n    videos: Object.values(state.videos),\n    lyrics: Object.values(state.lyrics),\n    selectedMedia: state.selectedMedia\n  };\n};\n\nexport default connect(mapToStateProps, {\n  fetchPhotos,\n  fetchVideos,\n  fetchLyrics,\n  selectMedia\n})(ShowGallery);","map":{"version":3,"sources":["/Users/kanoflordelis/ForcedToConform/client/src/components/ShowGallery.js"],"names":["React","connect","fetchPhotos","fetchVideos","fetchLyrics","selectMedia","ShowGallery","Component","componentDidMount","props","render","selectedMedia","mapToStateProps","state","console","log","videos","photos","Object","values","lyrics"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,WAAnC,EAAgDC,WAAhD,QAAmE,YAAnE;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AACzCC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWP,WAAX;AACA,SAAKO,KAAL,CAAWN,WAAX;AACA,SAAKM,KAAL,CAAWL,WAAX;AACA;;AAEDM,EAAAA,MAAM,GAAG;AACR,UAAMC,aAAa,GAAG,KAAKF,KAAL,CAAWE,aAAjC,CADQ,CAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACA;;AAvCwC;;AA0C1C,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,SAAO;AACNC,IAAAA,MAAM,EAAEC,MAAM,CAACC,MAAP,CAAcN,KAAK,CAACI,MAApB,CADF;AAEND,IAAAA,MAAM,EAAEE,MAAM,CAACC,MAAP,CAAcN,KAAK,CAACG,MAApB,CAFF;AAGNI,IAAAA,MAAM,EAAEF,MAAM,CAACC,MAAP,CAAcN,KAAK,CAACO,MAApB,CAHF;AAINT,IAAAA,aAAa,EAAEE,KAAK,CAACF;AAJf,GAAP;AAMA,CARD;;AAUA,eAAeV,OAAO,CACrBW,eADqB,EAErB;AACCV,EAAAA,WADD;AAECC,EAAAA,WAFD;AAGCC,EAAAA,WAHD;AAICC,EAAAA;AAJD,CAFqB,CAAP,CAQbC,WARa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos, fetchVideos, fetchLyrics, selectMedia } from '../actions';\n\nclass ShowGallery extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchPhotos();\n\t\tthis.props.fetchVideos();\n\t\tthis.props.fetchLyrics();\n\t}\n\n\trender() {\n\t\tconst selectedMedia = this.props.selectedMedia;\n\t\t// if (selectedMedia === null) {\n\t\t// \treturn;\n\t\t// } else if (selectedMedia === 'Photo') {\n\t\t// \treturn this.props.photos.map(photo => {\n\t\t// \t\treturn (\n\t\t// \t\t\t<div key={photo.id} className=\"ui card\">\n\t\t// \t\t\t\t<div className=\"image\">\n\t\t// \t\t\t\t\t<img src={photo.acf.photo.url} alt={photo.acf.description} />\n\t\t// \t\t\t\t</div>\n\t\t// \t\t\t\t<div className=\"content\">\n\t\t// \t\t\t\t\t<div className=\"header\">{photo.acf.description}</div>\n\t\t// \t\t\t\t</div>\n\t\t// \t\t\t</div>\n\t\t// \t\t);\n\t\t// \t});\n\t\t// } else if (selectedMedia === 'Video') {\n\t\t// \treturn this.props.vidoes.map(video => {\n\t\t// \t\treturn (\n\t\t// \t\t\t<div key={video.id} className=\"ui card\">\n\t\t// \t\t\t\t<div className=\"image\">\n\t\t// \t\t\t\t\t<video />\n\t\t// \t\t\t\t</div>\n\t\t// \t\t\t\t<div className=\"content\">\n\t\t// \t\t\t\t\t<div className=\"header\">fasdf</div>\n\t\t// \t\t\t\t</div>\n\t\t// \t\t\t</div>\n\t\t// \t\t);\n\t\t// \t});\n\t\t// }\n\t\treturn <div>nothing</div>;\n\t}\n}\n\nconst mapToStateProps = state => {\n\tconsole.log(state.videos);\n\treturn {\n\t\tphotos: Object.values(state.photos),\n\t\tvideos: Object.values(state.videos),\n\t\tlyrics: Object.values(state.lyrics),\n\t\tselectedMedia: state.selectedMedia\n\t};\n};\n\nexport default connect(\n\tmapToStateProps,\n\t{\n\t\tfetchPhotos,\n\t\tfetchVideos,\n\t\tfetchLyrics,\n\t\tselectMedia\n\t}\n)(ShowGallery);\n"]},"metadata":{},"sourceType":"module"}