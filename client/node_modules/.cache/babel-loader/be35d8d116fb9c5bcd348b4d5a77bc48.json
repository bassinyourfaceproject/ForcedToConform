{"ast":null,"code":"var _jsxFileName = \"/Users/kanoflordelis/ForcedToConform/client/src/components/ShowGallery.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos, fetchVideos, fetchLyrics, selectMedia } from '../actions';\n\nclass ShowGallery extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderMediaList = selectedMedia => {\n      if (selectedMedia === 'Photo') {\n        console.log(selectMedia);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPhotos();\n    this.props.fetchVideos();\n    this.props.fetchLyrics();\n    this.rederMediaList = this.renderMediaList.bind(this);\n  }\n\n  // renderPhotos = () => {\n  // \tif (this.props == null) {\n  // \t\treturn <div>Loading</div>;\n  // \t}\n  // \treturn this.props.photos.map(photo => {\n  // \t\treturn (\n  // \t\t\t<div key={photo.id} className=\"ui card\">\n  // \t\t\t\t<div className=\"image\">\n  // \t\t\t\t\t<img src={photo.acf.photo.url} alt={photo.acf.description} />\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className=\"content\">\n  // \t\t\t\t\t<div className=\"header\">{photo.acf.description}</div>\n  // \t\t\t\t</div>\n  // \t\t\t</div>\n  // \t\t);\n  // \t});\n  // };\n  render() {\n    console.log(this.props.selectedMedia);\n    return React.createElement(\"div\", {\n      className: \"gallery-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"hi\");\n  }\n\n}\n\nconst mapToStateProps = state => {\n  return {\n    photos: Object.values(state.photos),\n    videos: Object.values(state.videos),\n    lyrics: Object.values(state.lyrics),\n    selectedMedia: state.selectedMedia\n  };\n};\n\nexport default connect(mapToStateProps, {\n  fetchPhotos,\n  fetchVideos,\n  fetchLyrics,\n  selectMedia\n})(ShowGallery);","map":{"version":3,"sources":["/Users/kanoflordelis/ForcedToConform/client/src/components/ShowGallery.js"],"names":["React","connect","fetchPhotos","fetchVideos","fetchLyrics","selectMedia","ShowGallery","Component","renderMediaList","selectedMedia","console","log","componentDidMount","props","rederMediaList","bind","render","mapToStateProps","state","photos","Object","values","videos","lyrics"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,WAAnC,EAAgDC,WAAhD,QAAmE,YAAnE;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAQzCC,eARyC,GAQvBC,aAAa,IAAI;AAClC,UAAIA,aAAa,KAAK,OAAtB,EAA+B;AAC9BC,QAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACA;AACD,KAZwC;AAAA;;AACzCO,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWX,WAAX;AACA,SAAKW,KAAL,CAAWV,WAAX;AACA,SAAKU,KAAL,CAAWT,WAAX;AACA,SAAKU,cAAL,GAAsB,KAAKN,eAAL,CAAqBO,IAArB,CAA0B,IAA1B,CAAtB;AACA;;AAQD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACRN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWJ,aAAvB;AACA,WAAO;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAnCwC;;AAsC1C,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNC,IAAAA,MAAM,EAAEC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACC,MAApB,CADF;AAENG,IAAAA,MAAM,EAAEF,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACI,MAApB,CAFF;AAGNC,IAAAA,MAAM,EAAEH,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACK,MAApB,CAHF;AAINd,IAAAA,aAAa,EAAES,KAAK,CAACT;AAJf,GAAP;AAMA,CAPD;;AASA,eAAeR,OAAO,CACrBgB,eADqB,EAErB;AACCf,EAAAA,WADD;AAECC,EAAAA,WAFD;AAGCC,EAAAA,WAHD;AAICC,EAAAA;AAJD,CAFqB,CAAP,CAQbC,WARa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhotos, fetchVideos, fetchLyrics, selectMedia } from '../actions';\n\nclass ShowGallery extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchPhotos();\n\t\tthis.props.fetchVideos();\n\t\tthis.props.fetchLyrics();\n\t\tthis.rederMediaList = this.renderMediaList.bind(this);\n\t}\n\n\trenderMediaList = selectedMedia => {\n\t\tif (selectedMedia === 'Photo') {\n\t\t\tconsole.log(selectMedia);\n\t\t}\n\t};\n\n\t// renderPhotos = () => {\n\t// \tif (this.props == null) {\n\t// \t\treturn <div>Loading</div>;\n\t// \t}\n\t// \treturn this.props.photos.map(photo => {\n\t// \t\treturn (\n\t// \t\t\t<div key={photo.id} className=\"ui card\">\n\t// \t\t\t\t<div className=\"image\">\n\t// \t\t\t\t\t<img src={photo.acf.photo.url} alt={photo.acf.description} />\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div className=\"content\">\n\t// \t\t\t\t\t<div className=\"header\">{photo.acf.description}</div>\n\t// \t\t\t\t</div>\n\t// \t\t\t</div>\n\t// \t\t);\n\t// \t});\n\t// };\n\n\trender() {\n\t\tconsole.log(this.props.selectedMedia);\n\t\treturn <div className=\"gallery-wrap\">hi</div>;\n\t}\n}\n\nconst mapToStateProps = state => {\n\treturn {\n\t\tphotos: Object.values(state.photos),\n\t\tvideos: Object.values(state.videos),\n\t\tlyrics: Object.values(state.lyrics),\n\t\tselectedMedia: state.selectedMedia\n\t};\n};\n\nexport default connect(\n\tmapToStateProps,\n\t{\n\t\tfetchPhotos,\n\t\tfetchVideos,\n\t\tfetchLyrics,\n\t\tselectMedia\n\t}\n)(ShowGallery);\n"]},"metadata":{},"sourceType":"module"}